iis_komo
========

This package contains prototype code to integrate the KOMO framework into the iis_lab setup.
The code within that package depends on the KOMO code which is not a catkin package.
Therefore the environment variable KOMO_PATH has to point to the KOMO root directory.

The execution depends on a set of configuration files, located in the config folder. The sample will
only work correct if current working directory points to that file. Run the sample, using

  roscd iis_komo/config
  rosrun iis_komo komo_easy
  
Now it should work. Therefore I created a launch script that allows to do that in one step.
  scripts/run_komo.sh

Notes:
======

- Sometimes is fine-planning necessary - first attempt gives an approximate solution
- It's possible that a planning outcome violates joint limits - that has to be taken into account!!!
- The robot can come into bad configurations that makes subsequent planning difficult
  This results in subsequent joint limit violations !!!
- Modified ors.cpp to avoid that hand joint position are reset - check if that worked!
- I set all arm joint limits 5 degrees lower than their actual hard limit!

Open questions:
==============

What does the following parameters mean?
- within MT.cfg:

  transitionType = 1
  Wrate = 1e0
  Hrate = 1e-0
  timeSteps = 100	this is the amount of waypoints, the resulting path contains
  duration = 3.
  
How can be determined if planning was successful (in terms of some tolerances) ?

  - By evaluating the resulting costs, but how can they be interpreted?
  - Was there a collision?
  - Was the goal pose reached at all?

Is it possible to explicitly plan just for one arm?
How can I add objects to the planning scene (durable)?
How can I set positions of fixed joints (durable)?
How can I prevent joint limit violations?
How to keep the robot in "good" configurations?

TODO:
- improve trajectory execution!
- improve trajectory validation
- implement function for setting hand joint positions			  - DONE
- provide service or topic that allows to add collision objects
- create suitable torso model (missing torso is sometimes a problem)!!!   - DONE
- provide a way to disable some shapes from collision checking
- provide a way to attach objects to gripper
